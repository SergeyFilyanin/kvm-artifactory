provider "libvirt" {
  uri = "qemu:///system"
}

resource "libvirt_volume" "base_vol" {
  name = "{{ vm_name }}_base_vol"
  source = "{{ local_image_dest }}/ubuntu_desktop.qcow2"
  pool = "{{ disk_pool }}"
  format = "qcow2"
}

resource "libvirt_volume" "ubuntu-qcow2" {
  name = "{{ vm_name }}_ubuntu.qcow2"
  pool = "{{ disk_pool }}"
  base_volume_id = "${libvirt_volume.base_vol.id}"
  base_volume_pool = "{{ disk_pool }}"
  size = {{ 1024 * 1024 * 1024 * disk_size_gb|int }}
  format = "qcow2"
}

data "template_file" "user_data" {
  template = "${file("${path.module}/cloud_init.cfg")}"
}

# Use CloudInit to add the instance
resource "libvirt_cloudinit_disk" "commoninit" {
  name = "{{ vm_name }}_commoninit.iso"
  pool = "{{ disk_pool }}"
  user_data = "${data.template_file.user_data.rendered}"
}

# Define KVM domain to create
resource "libvirt_domain" "{{ vm_name }}" {
  name   = "{{ vm_name }}"
  memory = {{ 1024 * ram|int }}
  vcpu   = {{ cpu }}

  network_interface {
    network_name = "default"
    hostname  = "{{ vm_name }}"
    addresses = ["{{ vm_ip }}"]
  }

  disk {
    volume_id = "${libvirt_volume.ubuntu-qcow2.id}"
  }

  cloudinit = "${libvirt_cloudinit_disk.commoninit.id}"

  console {
    type = "pty"
    target_type = "serial"
    target_port = "0"
  }

  graphics {
    type = "spice"
    listen_type = "address"
    autoport = true
  }
}